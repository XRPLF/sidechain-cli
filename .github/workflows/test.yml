name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.vscode/**'
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        # we have to use 3.7.1 to get around openssl issues
        # TODO: add 3.7 once xrpl-py has been updated
        python-version: ['3.8', '3.9', '3.10', '3.11']
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Load cached .local
        uses: actions/cache@v3
        with:
          path: /home/runner/.local
          key: dotlocal-${{ matrix.python-version }}-${{ hashFiles('.github/workflows') }}

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org/ | python -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Python + Retrieve Poetry dependencies from cache
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"
          cache: 'poetry'

      - name: Display Python version
        run: |
          python -c "import sys; print(sys.version)"

      - name: Install poetry dependencies
        run: poetry install

      - name: Pull images from docker
        run: |
          docker pull legleux/rippled-xbridge
          docker pull legleux/xbridge_witnessd

      - name: Run tests
        id: runTests
        run: |
          poetry run coverage run -m pytest -xsvv tests
          poetry run coverage report
        env:
          RIPPLED_EXE: docker
          WITNESSD_EXE: docker
          XCHAIN_CONFIG_DIR: /home/runner/work/sidechain-config
          GITHUB_CI: "True"

      - name: Debug Test Failure (Chain Outputs)
        if: always() && steps.runTests.outcome == 'failure'
        run: |
          echo "locking_chain"
          docker logs locking_chain
          echo "issuing_chain"
          docker logs issuing_chain
        env:
          XCHAIN_CONFIG_DIR: /home/runner/work/sidechain-config

      - name: Debug Test Failure (Witness Outputs)
        if: always() && steps.runTests.outcome == 'failure'
        run: |
          echo "witness0"
          docker logs witness0
          echo "witness1"
          docker logs witness1
          echo "witness2"
          docker logs witness2
          echo "witness3"
          docker logs witness3
          echo "witness4"
          docker logs witness4
        env:
          XCHAIN_CONFIG_DIR: /home/runner/work/sidechain-config
